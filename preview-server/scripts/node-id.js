//inline inject
// /**@type {Map<number,WeakRef<Node>>} */
// globalThis.livePreviewIds = new Map();
// var lpsNodeId = -1;

// /**@param {Node} node */
// globalThis.setLpsNodeId = function (node) {
// 	const noteId = ++lpsNodeId;
// 	node.livePreviewId = noteId;
// 	livePreviewIds.set(noteId, new WeakRef(node));
// };

// addEventListener("DOMContentLoaded", (event) => {
// 	const nodeIterator = document.createTreeWalker(document);

// 	let node;
// 	while ((node = nodeIterator.nextNode())) {
// 		if (node.nodeType === Node.ELEMENT_NODE) {
// 			node.id !== "live_preview_ids" && setLpsNodeId(node);
// 		} else if (node.nodeType === Node.TEXT_NODE && !node.nodeValue.startsWith("\n")) setLpsNodeId(node);
// 	}
// });

// <script id="live_preview_ids" type="module" src="/scripts/client-hmr.js"></script>
export const clientScript = new Uint8Array([
	60, 115, 99, 114, 105, 112, 116, 32, 105, 100, 61, 34, 108, 105, 118, 101, 95, 112, 114, 101, 118, 105, 101,
	119, 95, 105, 100, 115, 34, 32, 116, 121, 112, 101, 61, 34, 109, 111, 100, 117, 108, 101, 34, 32, 115, 114,
	99, 61, 34, 47, 99, 108, 105, 101, 110, 116, 45, 104, 109, 114, 46, 106, 115, 34, 62, 60, 47, 115, 99, 114,
	105, 112, 116, 62,
]);

export const nodeIdsScript = new Uint8Array([
	60, 115, 99, 114, 105, 112, 116, 32, 105, 100, 61, 34, 108, 105, 118, 101, 95, 112, 114, 101, 118, 105, 101,
	119, 95, 105, 100, 115, 34, 62, 10, 103, 108, 111, 98, 97, 108, 84, 104, 105, 115, 46, 108, 105, 118, 101, 80,
	114, 101, 118, 105, 101, 119, 73, 100, 115, 32, 61, 32, 110, 101, 119, 32, 77, 97, 112, 40, 41, 59, 10, 118,
	97, 114, 32, 108, 112, 115, 78, 111, 100, 101, 73, 100, 32, 61, 32, 45, 49, 59, 10, 10, 103, 108, 111, 98, 97,
	108, 84, 104, 105, 115, 46, 115, 101, 116, 76, 112, 115, 78, 111, 100, 101, 73, 100, 32, 61, 32, 102, 117,
	110, 99, 116, 105, 111, 110, 32, 40, 110, 111, 100, 101, 41, 32, 123, 10, 9, 99, 111, 110, 115, 116, 32, 110,
	111, 116, 101, 73, 100, 32, 61, 32, 43, 43, 108, 112, 115, 78, 111, 100, 101, 73, 100, 59, 10, 9, 110, 111,
	100, 101, 46, 108, 105, 118, 101, 80, 114, 101, 118, 105, 101, 119, 73, 100, 32, 61, 32, 110, 111, 116, 101,
	73, 100, 59, 10, 9, 108, 105, 118, 101, 80, 114, 101, 118, 105, 101, 119, 73, 100, 115, 46, 115, 101, 116, 40,
	110, 111, 116, 101, 73, 100, 44, 32, 110, 101, 119, 32, 87, 101, 97, 107, 82, 101, 102, 40, 110, 111, 100,
	101, 41, 41, 59, 10, 125, 59, 10, 10, 97, 100, 100, 69, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110, 101,
	114, 40, 34, 68, 79, 77, 67, 111, 110, 116, 101, 110, 116, 76, 111, 97, 100, 101, 100, 34, 44, 32, 40, 101,
	118, 101, 110, 116, 41, 32, 61, 62, 32, 123, 10, 9, 99, 111, 110, 115, 116, 32, 110, 111, 100, 101, 73, 116,
	101, 114, 97, 116, 111, 114, 32, 61, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 99, 114, 101, 97, 116,
	101, 84, 114, 101, 101, 87, 97, 108, 107, 101, 114, 40, 100, 111, 99, 117, 109, 101, 110, 116, 41, 59, 10, 10,
	9, 108, 101, 116, 32, 110, 111, 100, 101, 59, 10, 9, 119, 104, 105, 108, 101, 32, 40, 40, 110, 111, 100, 101,
	32, 61, 32, 110, 111, 100, 101, 73, 116, 101, 114, 97, 116, 111, 114, 46, 110, 101, 120, 116, 78, 111, 100,
	101, 40, 41, 41, 41, 32, 123, 10, 9, 9, 105, 102, 32, 40, 110, 111, 100, 101, 46, 110, 111, 100, 101, 84, 121,
	112, 101, 32, 61, 61, 61, 32, 78, 111, 100, 101, 46, 69, 76, 69, 77, 69, 78, 84, 95, 78, 79, 68, 69, 41, 32,
	123, 10, 9, 9, 9, 110, 111, 100, 101, 46, 105, 100, 32, 33, 61, 61, 32, 34, 108, 105, 118, 101, 95, 112, 114,
	101, 118, 105, 101, 119, 95, 105, 100, 115, 34, 32, 38, 38, 32, 115, 101, 116, 76, 112, 115, 78, 111, 100,
	101, 73, 100, 40, 110, 111, 100, 101, 41, 59, 10, 9, 9, 125, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40,
	110, 111, 100, 101, 46, 110, 111, 100, 101, 84, 121, 112, 101, 32, 61, 61, 61, 32, 78, 111, 100, 101, 46, 84,
	69, 88, 84, 95, 78, 79, 68, 69, 32, 38, 38, 32, 33, 110, 111, 100, 101, 46, 110, 111, 100, 101, 86, 97, 108,
	117, 101, 46, 115, 116, 97, 114, 116, 115, 87, 105, 116, 104, 40, 34, 92, 110, 34, 41, 41, 32, 115, 101, 116,
	76, 112, 115, 78, 111, 100, 101, 73, 100, 40, 110, 111, 100, 101, 41, 59, 10, 9, 125, 10, 125, 41, 59, 10, 60,
	47, 115, 99, 114, 105, 112, 116, 62,
]);

//console override for embedded preview
/* 
<script id="live_preview_ids">
const types = ["log", "info", "error", "warn"];
for (const type of types) {
	console[type] = function () {
		let args = [];
		for (const arg of arguments) args.push(typeof arg === "object" ? JSON.stringify(arg) : arg);
		window.parent.postMessage({ command: "passConsole", type, args: args.join(" ") });
	};
}
</script>
*/

export const consoleScript = new Uint8Array([
	60, 115, 99, 114, 105, 112, 116, 32, 105, 100, 61, 34, 108, 105, 118, 101, 95, 112, 114, 101, 118, 105, 101,
	119, 95, 105, 100, 115, 34, 62, 10, 99, 111, 110, 115, 116, 32, 116, 121, 112, 101, 115, 32, 61, 32, 91, 34,
	108, 111, 103, 34, 44, 32, 34, 105, 110, 102, 111, 34, 44, 32, 34, 101, 114, 114, 111, 114, 34, 44, 32, 34,
	119, 97, 114, 110, 34, 93, 59, 10, 102, 111, 114, 32, 40, 99, 111, 110, 115, 116, 32, 116, 121, 112, 101, 32,
	111, 102, 32, 116, 121, 112, 101, 115, 41, 32, 123, 10, 9, 99, 111, 110, 115, 111, 108, 101, 91, 116, 121,
	112, 101, 93, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 40, 41, 32, 123, 10, 9, 9, 108, 101, 116,
	32, 97, 114, 103, 115, 32, 61, 32, 91, 93, 59, 10, 9, 9, 102, 111, 114, 32, 40, 99, 111, 110, 115, 116, 32,
	97, 114, 103, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 41, 32, 97, 114, 103, 115, 46,
	112, 117, 115, 104, 40, 116, 121, 112, 101, 111, 102, 32, 97, 114, 103, 32, 61, 61, 61, 32, 34, 111, 98, 106,
	101, 99, 116, 34, 32, 63, 32, 74, 83, 79, 78, 46, 115, 116, 114, 105, 110, 103, 105, 102, 121, 40, 97, 114,
	103, 41, 32, 58, 32, 97, 114, 103, 41, 59, 10, 9, 9, 119, 105, 110, 100, 111, 119, 46, 112, 97, 114, 101, 110,
	116, 46, 112, 111, 115, 116, 77, 101, 115, 115, 97, 103, 101, 40, 123, 32, 99, 111, 109, 109, 97, 110, 100,
	58, 32, 34, 112, 97, 115, 115, 67, 111, 110, 115, 111, 108, 101, 34, 44, 32, 116, 121, 112, 101, 44, 32, 97,
	114, 103, 115, 58, 32, 97, 114, 103, 115, 46, 106, 111, 105, 110, 40, 34, 32, 34, 41, 32, 125, 41, 59, 10, 9,
	125, 59, 10, 125, 32, 10, 60, 47, 115, 99, 114, 105, 112, 116, 62,
]);
